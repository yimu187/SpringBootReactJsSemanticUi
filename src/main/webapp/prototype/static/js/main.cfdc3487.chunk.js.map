{"version":3,"sources":["components/FilterComp.js","components/RecordComp.js","components/Heading.js","App.js","serviceWorker.js","index.js"],"names":["FilterComp","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onCloseWindow","setState","open","hataMetni","onMetinChange","bind","assertThisInitialized","onTarihChange","onSayiChange","onKaydetClick","onSilClick","onAraClick","selectedItem","state","recordId","metin","tarih","sayi","e","target","value","paramOne","paramTwo","me","axios","post","then","response","data","success","message","console","log","catch","error","_this2","get","list","searchCallBack","_this3","setTimeout","react_default","a","createElement","id","className","Segment","List","Item","Form","Field","placeholder","onChange","commonjs","localization","btnAraHidden","Button","icon","labelPosition","floated","onClick","Icon","name","btnSilHidden","Modal","size","onClose","Header","Content","image","Component","RecordComp","selectedRecordIds","onTableIconClicked","item","onTableCheckBoxClick","onTableCheckChanged","includes","index","indexOf","splice","push","searchData","recordSearchCallBack","onTableDownloadIconClicked","url","file","window","Table","celled","Row","HeaderCell","textAlign","Body","map","key","Cell","Checkbox","type","components_FilterComp","Heading","activeSection","setActiveSection","activeSectonNumber","Fragment","Breadcrumb","Section","link","active","react_router_dom","to","Divider","hidden","HeadingRoute","components_Heading","App","document","title","react_router","path","render","components_RecordComp","component","Boolean","location","hostname","match","styleLink","rel","href","head","appendChild","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cfdc3487.chunk.js","sourcesContent":["import  React, {Component} from 'react';\r\nimport {Form, List,Segment, Button, Icon, Modal} from 'semantic-ui-react';\r\nimport {DateInput} from 'semantic-ui-calendar-react';\r\nimport 'moment/locale/tr';\r\nimport axios from 'axios';\r\n\r\nclass FilterComp extends Component{\r\n\r\n    constructor(props){\r\n        super();\r\n        this.onMetinChange = this.onMetinChange.bind(this);\r\n        this.onTarihChange = this.onTarihChange.bind(this);\r\n        this.onSayiChange = this.onSayiChange.bind(this);\r\n\r\n        this.onKaydetClick = this.onKaydetClick.bind(this);\r\n        this.onSilClick = this.onSilClick.bind(this);\r\n        this.onAraClick = this.onAraClick.bind(this);\r\n        this.onCloseWindow = this.onCloseWindow.bind(this);\r\n\r\n        if(props != null && props.selectedItem != null){\r\n            this.state = props.selectedItem;\r\n        }else{\r\n            this.state = {\r\n                recordId:null,\r\n                metin: '',\r\n                tarih: '',\r\n                sayi: 0,\r\n                open: false,\r\n                hataMetni: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    onMetinChange(e) {\r\n        this.setState({\r\n            metin : e.target.value\r\n        });\r\n    }\r\n\r\n    onTarihChange(paramOne, paramTwo) {\r\n        this.setState({\r\n            tarih : paramTwo.value\r\n        });\r\n    }\r\n\r\n    onSayiChange(e) {\r\n        this.setState({\r\n            sayi : e.target.value\r\n        });\r\n    }\r\n\r\n    onKaydetClick() {\r\n        var me=this;;\r\n\r\n        axios.post('http://localhost:8080/save', this.state)\r\n            .then(function (response) {\r\n                if(response.data != null && response.data.success){\r\n                    me.onAraClick()\r\n                }else if(response.data != null && !response.data.success){\r\n                    me.setState({\r\n                        open: true,\r\n                        hataMetni: response.data.message\r\n                    })\r\n                    console.log(response.data.message);\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    onSilClick() {\r\n        var me=this;;\r\n\r\n        axios.post('http://localhost:8080/delete', this.state)\r\n            .then(function (response) {\r\n                if(response.data != null && response.data.success){\r\n                    me.onAraClick()\r\n                }else if(response.data != null && !response.data.success){\r\n                    me.setState({\r\n                        open: true,\r\n                        hataMetni: response.data.message\r\n                    })\r\n                    console.log(response.data.message);\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n\r\n    onAraClick() {\r\n        axios.get('http://localhost:8080/data')\r\n            .then(response => {\r\n                const data = response.data;\r\n                const list = data.list;\r\n                this.props.searchCallBack(list);\r\n            });\r\n    }\r\n\r\n    componentDidMount(){\r\n        setTimeout(() => {\r\n            this.onAraClick();\r\n        }, 300)\r\n    };\r\n\r\n    onCloseWindow = () => this.setState({open: false, hataMetni:''});\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"Form\" className='App'>\r\n\r\n                <Segment>\r\n                    <List>\r\n                        <List.Item>\r\n                            <Form>\r\n                                <Form.Field>\r\n                                    <input placeholder='Metin' value={this.state.metin} onChange={this.onMetinChange}/>\r\n                                </Form.Field>\r\n                            </Form>\r\n                        </List.Item>\r\n\r\n                        <List.Item>\r\n                            <Form>\r\n                                <Form.Field>\r\n                                    <DateInput\r\n                                        localization='tr'\r\n                                        placeholder='Tarih'\r\n                                        value={this.state.tarih}\r\n                                        onChange={this.onTarihChange}\r\n                                    />\r\n                                </Form.Field>\r\n                            </Form>\r\n                        </List.Item>\r\n\r\n                        <List.Item>\r\n                            <Form>\r\n                                <Form.Field>\r\n                                    <input placeholder='Sayı' value={this.state.sayi}  onChange={this.onSayiChange}/>\r\n                                </Form.Field>\r\n                            </Form>\r\n                        </List.Item>\r\n\r\n                        <List.Item>\r\n                            <div>\r\n                                {!this.props.btnAraHidden ?\r\n\r\n                                <Button icon labelPosition='left' floated='left' onClick={this.onAraClick}>\r\n                                    <Icon name='search' />\r\n                                    Yenile\r\n                                </Button>\r\n                                : ''\r\n                                }\r\n\r\n                                {!this.props.btnSilHidden ?\r\n                                <Button icon labelPosition='right' floated='right' onClick={this.onSilClick}>\r\n                                    <Icon name='save' />\r\n                                    Sil\r\n                                </Button>\r\n                                    : ''\r\n                                }\r\n                                <Button icon labelPosition='right' floated='right' onClick={this.onKaydetClick}>\r\n                                    <Icon name='save' />\r\n                                    Kaydet\r\n                                </Button>\r\n                            </div>\r\n                        </List.Item>\r\n                    </List>\r\n                </Segment>\r\n\r\n                <Modal size='mini' open={this.state.open} onClose={this.onCloseWindow}>\r\n                    <Modal.Header >Dikkat</Modal.Header>\r\n                    <Modal.Content image>\r\n                        <p>{this.state.hataMetni}</p>\r\n                    </Modal.Content>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default FilterComp","import React, {Component} from 'react';\r\nimport {Checkbox, Icon, Modal, Table} from \"semantic-ui-react\";\r\nimport FilterComp from \"./FilterComp\";\r\n\r\nclass RecordComp extends Component{\r\n\r\n    state = {\r\n        selectedRecordIds: [],\r\n        open:false,\r\n        selectedItem: {\r\n            tarih: '',\r\n            metin: '',\r\n            sayi: 0\r\n        }\r\n    }\r\n\r\n    constructor(){\r\n        super();\r\n        this.onTableCheckBoxClick = this.onTableCheckBoxClick.bind(this);\r\n        this.onTableCheckChanged = this.onTableCheckChanged.bind(this);\r\n    }\r\n\r\n    onTableIconClicked = (item) =>{\r\n        this.setState({\r\n            selectedItem: item,\r\n            open:true\r\n        });\r\n    }\r\n\r\n    onClose = () => this.setState({open: false});\r\n\r\n    onTableCheckBoxClick = (item) => {\r\n        console.log(item + '  onTableCheckBoxClick');\r\n    }\r\n\r\n    onTableCheckChanged = (item) => {\r\n\r\n        var selectedRecordIds = this.state.selectedRecordIds;\r\n\r\n        if(selectedRecordIds.includes(item)){\r\n            const index = selectedRecordIds.indexOf(item);\r\n            selectedRecordIds.splice(index, 1);\r\n        }else{\r\n            selectedRecordIds.push(item);\r\n        }\r\n\r\n        this.setState({\r\n            selectedRecordIds\r\n        })\r\n    }\r\n\r\n    searchCallBack = (searchData) =>{\r\n       this.props.recordSearchCallBack(searchData);\r\n    }\r\n\r\n    onTableDownloadIconClicked = (item)=>{\r\n        console.log(item);\r\n\r\n        var url = 'http://localhost:8080/download/' + item.recordId;\r\n\r\n        setTimeout(() => {\r\n            const response = {\r\n                file: url,\r\n            };\r\n            window.open(response.file);\r\n        }, 100);\r\n    }\r\n\r\n\r\n\r\n    download() {\r\n        // fake server request, getting the file url as response\r\n        setTimeout(() => {\r\n            const response = {\r\n                file: 'http://releases.ubuntu.com/12.04.5/ubuntu-12.04.5-alternate-amd64.iso',\r\n            };\r\n            // server sent the url to the file!\r\n            // now, let's download:\r\n            window.open(response.file);\r\n            // you could also do:\r\n            // window.location.href = response.file;\r\n        }, 100);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table celled>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell textAlign='center'>Tarih</Table.HeaderCell>\r\n                            <Table.HeaderCell textAlign='center'>Metin</Table.HeaderCell>\r\n                            <Table.HeaderCell textAlign='center'>Sayı</Table.HeaderCell>\r\n                            <Table.HeaderCell textAlign='center'>Seçim</Table.HeaderCell>\r\n                            <Table.HeaderCell textAlign='center'>Detay</Table.HeaderCell>\r\n                            <Table.HeaderCell textAlign='center'>İndir</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n\r\n                    <Table.Body>\r\n\r\n                        {this.props.list.map(item => {\r\n                            return (\r\n                                <Table.Row key={item.recordId} onClick = {this.onTableCheckBoxClick.bind(this, item)}>\r\n                                    <Table.Cell textAlign='center'>{item.tarih}</Table.Cell>\r\n                                    <Table.Cell textAlign='center'>{item.metin}</Table.Cell>\r\n                                    <Table.Cell textAlign='center'>{item.sayi}</Table.Cell>\r\n                                    <Table.Cell textAlign='center'>\r\n                                        <Checkbox type='checkbox' onChange={this.onTableCheckChanged.bind(this, item)} />\r\n                                    </Table.Cell>\r\n                                    <Table.Cell textAlign='center' onClick={this.onTableIconClicked.bind(this, item)}>\r\n                                        <Icon name='arrow right'></Icon>\r\n                                    </Table.Cell>\r\n                                    <Table.Cell textAlign='center' onClick={this.onTableDownloadIconClicked.bind(this, item)}>\r\n                                        <Icon name='arrow down'></Icon>\r\n                                    </Table.Cell>\r\n                                </Table.Row>\r\n                            )\r\n                        })}\r\n                    </Table.Body>\r\n                </Table>\r\n\r\n                <Modal size='mini' open={this.state.open} onClose={this.onClose}>\r\n                    <Modal.Header >{this.state.selectedItem.tarih} Tarihli Kaydın Detayı</Modal.Header>\r\n                    <Modal.Content image>\r\n                        <FilterComp searchCallBack = {this.searchCallBack} selectedItem={this.state.selectedItem} btnAraHidden={true}/>\r\n                    </Modal.Content>\r\n                </Modal>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default RecordComp;","import  React, {Component} from 'react';\r\nimport {Breadcrumb, Divider} from 'semantic-ui-react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass Heading extends Component{\r\n\r\n    state = {\r\n        activeSection: 0\r\n    }\r\n\r\n    setActiveSection = (activeSectonNumber) => {\r\n        this.setState({\r\n            activeSection : activeSectonNumber\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const sizes = ['huge']\r\n        return (\r\n\r\n            <div className=\"Heading\">\r\n                <React.Fragment >\r\n                    {sizes.map(size => (\r\n                        <React.Fragment key={size}>\r\n                            <Breadcrumb size={size}>\r\n                                <Breadcrumb.Section link\r\n                                onClick={() => this.setActiveSection(0)}\r\n                                active={this.state.activeSection == 0}>\r\n                                    <NavLink to='/firstStep'>Birinci Adım</NavLink>\r\n                                </Breadcrumb.Section>\r\n\r\n                                <Breadcrumb.Divider icon='right chevron' />\r\n\r\n                                <Breadcrumb.Section link\r\n                                onClick={() => this.setActiveSection(1)}\r\n                                active={this.state.activeSection == 1}>\r\n                                    <NavLink to='/secondStep'>İkinci Adım</NavLink>\r\n                                </Breadcrumb.Section>\r\n\r\n                                <Breadcrumb.Divider icon='right chevron' />\r\n\r\n                                <Breadcrumb.Section link\r\n                                onClick={() => this.setActiveSection(2)}\r\n                                active={this.state.activeSection == 2}>\r\n                                    <NavLink to='/thirdStep'>Üçüncü Adım</NavLink>\r\n                                </Breadcrumb.Section>\r\n                            </Breadcrumb>\r\n                            <Divider hidden />\r\n                        </React.Fragment>\r\n                    ))}\r\n                </React.Fragment>\r\n\r\n                <p></p>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Heading","import React, {Component} from 'react';\nimport './App.css';\nimport FilterComp from './components/FilterComp'\nimport RecordComp from './components/RecordComp'\nimport Heading from './components/Heading'\nimport {BrowserRouter as Router, Switch, Route ,Redirect} from \"react-router-dom\";\n\nconst HeadingRoute =  () => {\n    return (<Heading/>)\n}\n\nclass App extends Component {\n\n  state = {\n    list : []\n  }\n\n  constructor(){\n    super();\n    this.searchCallBack = this.searchCallBack.bind(this);\n\n    document.title = 'SAMPLE CRUD PAGE';\n  }\n\n  searchCallBack = (searchData) =>{\n    console.log('searchCallBack');\n    this.setState({\n      list: searchData\n    })\n  }\n\n  render() {\n    return (\n\n        <Router>\n            <Switch>\n\n                <Route path={\"/crudPage\"} render={\n                    () => {\n                        return   <div>\n                            <Heading/>\n                            <FilterComp\n                                searchCallBack = {this.searchCallBack}\n                                btnSilHidden={true}\n                            />\n                            <RecordComp list={this.state.list} recordSearchCallBack={this.searchCallBack}/>\n                        </div>\n                    }\n                }/>\n\n                <Route path=\"/heading\" component={HeadingRoute}/>\n\n                <Route path=\"/firstStep\" component={HeadingRoute}/>\n\n                <Route path=\"/secondStep\" component={HeadingRoute}/>\n\n                <Route path=\"/thirdStep\" component={HeadingRoute}/>\n\n                <Redirect to=\"/crudPage\" />\n\n            </Switch>\n\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst styleLink = document.createElement(\"link\");\nstyleLink.rel = \"stylesheet\";\nstyleLink.href = \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\ndocument.head.appendChild(styleLink);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}